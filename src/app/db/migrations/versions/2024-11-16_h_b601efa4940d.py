# type: ignore
"""h

Revision ID: b601efa4940d
Revises: 5e150888c8a9
Create Date: 2024-11-16 18:26:19.774897+00:00

"""
from __future__ import annotations

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401
from sqlalchemy.dialects import postgresql
if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = 'b601efa4940d'
down_revision = '5e150888c8a9'
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('satellite',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('group', sa.String(), nullable=True),
    sa.Column('dry_mass', sa.Float(), nullable=False),
    sa.Column('drag_area', sa.Float(), nullable=False),
    sa.Column('drag_coefficient', sa.Float(), nullable=False),
    sa.Column('srp_area', sa.Float(), nullable=False),
    sa.Column('srp_coefficient', sa.Float(), nullable=False),
    sa.Column('tle_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('propulsion', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('aocs', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('gnss', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('dynamics_config', sa.String(), nullable=False),
    sa.Column('main_orbit_id', sa.GUID(length=16), nullable=True),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_satellite'))
    )
    with op.batch_alter_table('satellite', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_satellite_group'), ['group'], unique=False)
        batch_op.create_index(batch_op.f('ix_satellite_name'), ['name'], unique=False)

    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('satellite', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_satellite_name'))
        batch_op.drop_index(batch_op.f('ix_satellite_group'))

    op.drop_table('satellite')
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
