# type: ignore
"""h

Revision ID: 458412d800c4
Revises: b601efa4940d
Create Date: 2024-11-17 15:35:40.245992+00:00

"""
from __future__ import annotations

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = '458412d800c4'
down_revision = 'b601efa4940d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dynamics',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('harmonics_degree', sa.Integer(), nullable=False),
    sa.Column('harmonics_order', sa.Integer(), nullable=False),
    sa.Column('solar_radiation_pressure', sa.Boolean(), nullable=False),
    sa.Column('drag', sa.Boolean(), nullable=False),
    sa.Column('solid_tides', sa.Boolean(), nullable=False),
    sa.Column('third_body_sun', sa.Boolean(), nullable=False),
    sa.Column('third_body_moon', sa.Boolean(), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_dynamics'))
    )
    with op.batch_alter_table('dynamics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_dynamics_name'), ['name'], unique=False)

    with op.batch_alter_table('satellite', schema=None) as batch_op:
        batch_op.add_column(sa.Column('dynamics_id', sa.GUID(length=16), nullable=False))
        batch_op.create_foreign_key(batch_op.f('fk_satellite_dynamics_id_dynamics'), 'dynamics', ['dynamics_id'], ['id'], ondelete='cascade')
        batch_op.drop_column('dynamics_config')

    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('satellite', schema=None) as batch_op:
        batch_op.add_column(sa.Column('dynamics_config', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(batch_op.f('fk_satellite_dynamics_id_dynamics'), type_='foreignkey')
        batch_op.drop_column('dynamics_id')

    with op.batch_alter_table('dynamics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dynamics_name'))

    op.drop_table('dynamics')
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
