# type: ignore
"""h

Revision ID: a31f5dfe2c4c
Revises: 458412d800c4
Create Date: 2024-11-27 17:24:30.126307+00:00

"""
from __future__ import annotations

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = 'a31f5dfe2c4c'
down_revision = '458412d800c4'
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orbit',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('IPF', 'TLE', 'OEM', name='orbittype'), nullable=False),
    sa.Column('start', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('end', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('satellite_id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['satellite_id'], ['satellite.id'], name=op.f('fk_orbit_satellite_id_satellite'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orbit'))
    )
    with op.batch_alter_table('satellite', schema=None) as batch_op:
        batch_op.drop_column('main_orbit_id')

    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('satellite', schema=None) as batch_op:
        batch_op.add_column(sa.Column('main_orbit_id', sa.UUID(), autoincrement=False, nullable=True))

    op.drop_table('orbit')
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
