# type: ignore
"""y

Revision ID: 20e34def4d43
Revises: a31f5dfe2c4c
Create Date: 2024-12-19 08:10:46.649096+00:00

"""
from __future__ import annotations

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401
from sqlalchemy.dialects import postgresql
if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = '20e34def4d43'
down_revision = 'a31f5dfe2c4c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ipf_orbit',
    sa.Column('id', sa.GUID(length=16), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('start', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('end', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('satellite_id', sa.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['satellite_id'], ['satellite.id'], name=op.f('fk_ipf_orbit_satellite_id_satellite'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ipf_orbit'))
    )
    op.drop_table('orbit')
    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orbit',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('IPF', 'TLE', 'OEM', name='orbittype'), autoincrement=False, nullable=False),
    sa.Column('start', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('end', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('satellite_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sa_orm_sentinel', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['satellite_id'], ['satellite.id'], name='fk_orbit_satellite_id_satellite', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pk_orbit')
    )
    op.drop_table('ipf_orbit')
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
